const axios = require('axios')
const { fetchJson,cmd, GIFBufferToVideoBuffer, sck} = require('../lib')
    //---------------------------------------------------------------------------
const bite = cmd({
            pattern: "bite",
            alias: ['–∫—É—Å–∞—Ç—å','–∫—É—Å–∞—é'],
            category: "reaction",
            use: '<quote|reply|tag>',
            react: "üòä",
        },
        async(Void, citel) => {
            var bite = await fetchJson(`https://api.waifu.pics/sfw/bite`);
            const response = await axios.get(bite.url, {
                responseType: "arraybuffer",
            });
            const buffer = Buffer.from(response.data, "utf-8");
            let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
            let gif = await GIFBufferToVideoBuffer(buffer);
            if (users) {
                let cap = `@${citel.sender.split("@")[0]} –∫—É—Å–∞–µ—Ç @${users.split("@")[0]} `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
            } else {
                let cap = `@${citel.sender.split("@")[0]} –∫—É—Å–∞–µ—Ç —Å–µ–±—è. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
            }
        }
    )
    //---------------------------------------------------------------------------
const pat = cmd({
            pattern: "pat",
            alias: ["–≥–ª–∞–¥–∏—Ç—å"],
            category: "reaction",
            use: '<quote|reply|tag>',
            react: "üòá",
        },
        async(Void, citel, a) => {
            var bite = await fetchJson(`https://api.waifu.pics/sfw/pat`);
            const response = await axios.get(bite.url, {
                responseType: "arraybuffer",
            });
            const buffer = Buffer.from(response.data, "utf-8");
            let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
            let gif = await GIFBufferToVideoBuffer(buffer);
            if (users) {
                let cap = `@${citel.sender.split("@")[0]} –≥–ª–∞–¥–∏—Ç @${users.split("@")[0]} `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
            } else {
                let cap = `@${citel.sender.split("@")[0]} –≥–ª–∞–¥–∏—Ç —Å–µ–±—è. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
            }
        }
    )
    //---------------------------------------------------------------------------
const kiss = cmd({
            pattern: "kiss",
            alias: ["—Ü–µ–ª–æ–≤–∞—Ç—å"],
            category: "reaction",
            use: '<quote|reply|tag>',
            react: "üòò",
        },
        async(Void, citel) => {
            var bite = await fetchJson(`https://api.waifu.pics/sfw/kiss`);
            const response = await axios.get(bite.url, {
                responseType: "arraybuffer",
            });
            const buffer = Buffer.from(response.data, "utf-8");
            let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
            let gif = await GIFBufferToVideoBuffer(buffer);
            if (users) {
                let cap = `@${citel.sender.split("@")[0]} —Ü–µ–ª—É–µ—Ç @${users.split("@")[0]} `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
            } else {
                let cap = `@${citel.sender.split("@")[0]} —Ü–µ–ª—É–µ—Ç —Å–µ–±—è. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
            }
        }
    )
    //---------------------------------------------------------------------------
const kill = cmd({
            pattern: "kill",
            alias: ["—É–±–∏—Ç—å"],
            category: "reaction",
            use: '<quote|reply|tag>',
            react: "üòà",
        },
        async(Void, citel) => {
            var bite = await fetchJson(`https://api.waifu.pics/sfw/kill`);
            const response = await axios.get(bite.url, {
                responseType: "arraybuffer",
            });
            const buffer = Buffer.from(response.data, "utf-8");
            let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
            let gif = await GIFBufferToVideoBuffer(buffer);
            if (users) {
                let cap = `@${citel.sender.split("@")[0]} —É–±–∏–ª @${users.split("@")[0]}. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
            } else {
                let cap = `@${citel.sender.split("@")[0]} —É–±–∏–ª(–∞) —Å–∞–º(–∞) —Å–µ–±—è. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
            }
        }
    )
    //---------------------------------------------------------------------------
const happy = cmd({
            pattern: "happy",
            alias: ["—Ä–∞–¥–æ–≤–∞—Ç—å—Å—è"],
            category: "reaction",
            use: '<quote|reply|tag>',
            react: "üòé",
        },
        async(Void, citel) => {
            var bite = await fetchJson(`https://api.waifu.pics/sfw/dance`);
            const response = await axios.get(bite.url, {
                responseType: "arraybuffer",
            });
            const buffer = Buffer.from(response.data, "utf-8");
            let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
            let gif = await GIFBufferToVideoBuffer(buffer);
            if (users) {
                let cap = `@${citel.sender.split("@")[0]} —Ä–∞–¥—É–µ—Ç—Å—è –∑–∞ @${users.split("@")[0]} `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
            } else {
                let cap = `@${citel.sender.split("@")[0]} —Ä–∞–¥—É–µ—Ç—Å—è –∑–∞ —Å–∞–º–æ–≥–æ(—É) —Å–µ–±—è. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
            }
        }
    )
    //---------------------------------------------------------------------------
const dance = cmd({
            pattern: "dance",
            alias: ['—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å'],
            category: "reaction",
            use: '<quote|reply|tag>',
            react: "üíÄ",
        },
        async(Void, citel) => {
            var bite = await fetchJson(`https://api.waifu.pics/sfw/dance`);
            const response = await axios.get(bite.url, {
                responseType: "arraybuffer",
            });
            const buffer = Buffer.from(response.data, "utf-8");
            let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
            let gif = await GIFBufferToVideoBuffer(buffer);
            if (users) {
                let cap = `@${citel.sender.split("@")[0]} —Ç–∞–Ω—Ü—É–µ—Ç —Å @${users.split("@")[0]} `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
            } else {
                let cap = `@${citel.sender.split("@")[0]} —Ç–∞–Ω—Ü—É–µ—Ç —Å–∞–º(–∞) —Å —Å–æ–±–æ–π. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
            }
        }
    )
    //---------------------------------------------------------------------------
const hug = cmd({
        pattern: "hug",
        alias: ["–æ–±–Ω–∏–º–∞—Ç—å"],
        category: "reaction",
        use: '<quote|reply|tag>',
        react: "ü§ó",
    },
    async(Void, citel) => {
        var bite = await fetchJson(`https://api.waifu.pics/sfw/cuddle`);
        const response = await axios.get(bite.url, {
            responseType: "arraybuffer",
        });
        const buffer = Buffer.from(response.data, "utf-8");
        let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
        let gif = await GIFBufferToVideoBuffer(buffer);
        if (users) {
            let cap = `@${citel.sender.split("@")[0]} –æ–±–Ω–∏–º–∞–µ—Ç @${users.split("@")[0]} `;
            Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
        } else {
            let cap = `@${citel.sender.split("@")[0]} –æ–±–Ω–∏–º–∞–µ—Ç —Å–∞–º(—É) —Å–µ–±—è. `;
            Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
        }
    }
)
//----------------------------------------------------------------------------------
const minet = cmd({
            pattern: "minet",
            alias: ["–º–∏–Ω–µ—Ç", "."],
            category: "reaction",
            use: '<quote|reply|tag>',
            react: "ü•∞",
        },
        async(Void, citel) => {
            const checkNSFW = await sck.findOne({ id: citel.sender, groupId: citel.chat });
            if (checkNSFW.nsfw === 'false') return;

            var bite = await fetchJson(`https://api.waifu.pics/nsfw/blowjob`);
            const response = await axios.get(bite.url, {
                responseType: "arraybuffer",
            });
            const buffer = Buffer.from(response.data, "utf-8");
            let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
            let gif = await GIFBufferToVideoBuffer(buffer);
            if (users) {
                let cap = `@${citel.sender.split("@")[0]} —Å–¥–µ–ª–∞–ª(–∞) –º–∏–Ω–µ—Ç @${users.split("@")[0]} `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
            } else {
                let cap = `@${citel.sender.split("@")[0]} —Å–¥–µ–ª–∞–ª(–∞) –º–∏–Ω–µ—Ç —Å–∞–º(–∞) —Å–µ–±–µ. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
            }
        }
    )
//------------------------------------------------------------------------------
const viebat = cmd({
            pattern: "viebat",
            alias: ["–≤—ã–µ–±–∞—Ç—å"],
            category: "nsfw",
            use: '<quote|reply|tag>',
            react: "ü•µ",
        },
        async(Void, citel) => {
            //-------–í–∫–ª/–í—ã–∫–ª
            const checkNSFW = await sck.findOne({ id: citel.sender, groupId: citel.chat });
            if (checkNSFW.nsfw === 'false') return citel.reply(`18+ –ö–æ–º–∞–Ω–¥—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ`);
            //-------–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
            var bite = await fetchJson(`https://api.waifu.pics/nsfw/trap`);
            const response = await axios.get(bite.url, {
                responseType: "arraybuffer",
            });
            const buffer = Buffer.from(response.data, "utf-8");
            let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
            let gif = await GIFBufferToVideoBuffer(buffer);
            if (users) {
                let cap = `@${citel.sender.split("@")[0]} –≤—ã–µ–±–∞–ª(–∞) @${users.split("@")[0]} `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [users, citel.sender], caption: cap }, { quoted: citel });
            } else {
                let cap = `@${citel.sender.split("@")[0]} –≤—ã–µ–±–∞–ª(–∞) —Å–∞–º(–∞) —Å–µ–±—è. `;
                Void.sendMessage(citel.chat, { video: gif, gifPlayback: true, mentions: [citel.sender], caption: cap }, { quoted: citel });
            }
        }
    )

module.exports = [bite,kiss,pat,happy,viebat,minet,kill,dance,hug]