//----------------------------- kick/rem ------------------------------------
const { cmd, getAdmin, tlang, counter } = require('../lib');

const kick = cmd({
    pattern: "rem",
    alias: ["–∫–∏–∫", "kick", "—Ä–µ–º"],
    desc: "Kicks replied/quoted user(s) from the group.",
    category: "group",
    filename: __filename,
    use: '<quote|reply|number>',
},
async (Void, citel, text) => { 
    if (!citel.isGroup) return citel.reply('‚ùï –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!');
    const groupAdmins = await getAdmin(Void, citel);
    const botNumber = await Void.decodeJid(Void.user.id);
    const isBotAdmins = citel.isGroup ? groupAdmins.includes(botNumber) : false;
    if (!isBotAdmins) return citel.reply('‚ö†Ô∏è –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–¥–∞—Ç—å *–∞–¥–º–∏–Ω–∫—É* –±–æ—Ç—É');
    
    try {
        let users = citel.mentionedJid || [citel.msg.contextInfo.participant];
        if (!users || users.length === 0) return citel.reply('‚ùï –û—Ç–º–µ—Ç—å —Ç–æ–≥–æ, –∫–æ–≥–æ —Ö–æ—á–µ—à—å –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –≥—Ä—É–ø–ø—ã\n\nüìå–ü—Ä–∏–º–µ—Ä: .–ö–∏–∫ @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
        if (users.includes(botNumber)) return citel.reply(`–ë–æ—Ç–∞ –Ω–µ–ª—å–∑—è –∏—Å–∫–ª—é—á–∏—Ç—å —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π.`);
        if (users.includes(citel.sender)) return citel.reply(`–≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –Ω–µ–ª—å–∑—è —Å–µ–±—è –∏—Å–∫–ª—é—á–∏—Ç—å üò¢`);
        
        await Void.groupParticipantsUpdate(citel.chat, users, "remove");
    } catch (error) {
        console.error(error);
    }

    const User = user.findOne({ id: citel.sender });
    console.log(User);
});
//-------------------------------------------------------------------–î–æ–±–∞–≤–∏—Ç—å
const add = cmd({
    pattern: "add",
    alias: ["–¥–æ–±–∞–≤–∏—Ç—å"],
    desc: "Add that person in group",
    fromMe: true,
    category: "group",
    filename: __filename,
    use: '<number>',
},
async (Void, citel, text) => {
    const userrr = await counter.findOne({ userId: citel.sender });
        if (!citel.isGroup) return citel.reply(tlang().group);
        if (userrr.wbc < 5) return citel.reply(`–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç WhaBotCoins, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ 5 WBC : —É –≤–∞—Å –∑–∞–≤–∞–ª—è–ª–æ—Å—å –≤ –∫–∞—Ä–º–∞–Ω–µ ${userrr.wbc} WBC `);

        const groupAdmins = await getAdmin(Void, citel)
        const botNumber = await Void.decodeJid(Void.user.id)
        const isBotAdmins = citel.isGroup ? groupAdmins.includes(botNumber) : false;
        const jid = citel.chat

        if (!isBotAdmins) return citel.reply(tlang().botAdmin);

        let users = citel.mentionedJid && citel.mentionedJid[0] || citel.quoted && citel.quoted.sender || citel.msg && citel.msg.contextInfo && citel.msg.contextInfo.participant || text && text.replace(/[^0-9]/g, "") + "@s.whatsapp.net" || false;
        if (!users) return citel.reply('–ù–æ–º–µ—Ä –¥–∞–π..');

        try {   
        const add = (await Void.groupParticipantsUpdate(citel.chat, [users], "add"))[0];
        const addinfo = add.content;
        await counter.updateOne({ userId: citel.sender }, { $inc: { wbc: -7 } });
        if (add.status === '409') {
            return citel.reply('–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥—Ä—É–ø–ø–µ..');
        } else if (add.status === '408') {
            citel.reply('–≠—Ç–æ—Ç –µ–ø–ª–∞–Ω –Ω–µ–¥–∞–≤–Ω–æ –≤—ã—à–µ–ª –∏–∑ –≥—Ä—É–ø–ø—ã –∏ –µ–≥–æ –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å–∏–ª—å–Ω–æ, —è –æ—Ç–ø—Ä–∞–≤–∏–ª –µ–º—É —Å—Å—ã–ª–∫—É...')
            let response = await Void.groupInviteCode(citel.chat)
            let link = 'https://chat.whatsapp.com/' + response
            await Void.sendMessage(users, { text: `–ö–∞–∫–æ–π-—Ç–æ –µ–ø–ª–∞–Ω –ø—ã—Ç–∞–µ—Ç—å—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–±—è  –≤ –≥—Ä—É–ø–ø—É –∏—Å–ø–æ–ª—å–∑—É—è –±–æ—Ç–∞ - _${link}_` })
        } else {
            citel.reply('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–Ω–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ–≥–æ –µ–±–ª–∞–Ω–∞ –Ω–∞—Å–∏–ª—å–Ω–æ, –ø–æ—ç—Ç–æ–º—É —è –æ—Ç–ø—Ä–∞–≤–∏–ª –µ–º—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ...')
            await Void.sendAcceptInviteV4(jid, users, addinfo)
        }
    } catch (error) {
        console.error("Error in add command:", error);
        citel.reply("–ù–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö WhatsApp");
    }
});     
//----------------------------- WARN ------------------------------------
const warn = cmd({
    pattern: "warn",
    alias: ["–ø—Ä–µ–¥"],
    desc: "Warns user in Group.",
    category: "group",
    filename: __filename,
    use: '<quote|reply|number>',
},
async (Void, citel, text) => {
    const userrr = await counter.findOne({ groupId: citel.chat, userId: citel.sender });
    if (!citel.isGroup) return citel.reply('–¢–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø.');
    const groupAdmins = await getAdmin(Void, citel);
    const botNumber = await Void.decodeJid(Void.user.id);
    const isBotAdmins = citel.isGroup ? groupAdmins.includes(botNumber) : false;
    if (!citel.isCreator) return citel.reply('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é.');
    if (!isBotAdmins) return citel.reply(tlang().botAdmin);

    let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
    if (!users) return citel.reply('–ù–µ —Ç–∞–∫ —é–∑–∞–µ—à—å.');
    if (!text) return await citel.reply(`–ü—Ä–∏—á–∏–Ω—ã –Ω–µ—Ç`);
    if (users === botNumber) return citel.reply(`–ò–¥–∏ –∫–∞ —Ç—ã –≤ –ø–∏—Å—é, –ø–æ–Ω?`);
    if (users === citel.sender) return citel.reply(`–¢—ã –Ω–µ –º–æ–∂–µ—à—å –≤—ã–≥–Ω–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è, –ø–æ–Ω?`);

    let str = users;
    let newStr = str.replace("@s.whatsapp.net", "warn");
    let checkqinfo = await warndb.find({ id: newStr, group: citel.chat });
    let pushnamer = Void.getName(users);
    const date = new Date();
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    const seconds = String(date.getSeconds()).padStart(2, '0');
    const currentTime = `${hours}:${minutes}:${seconds}`;
    let textt = `–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - @${users.split("@")[0]}\n–ö–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω - @${citel.sender.split("@")[0]}\n–ü—Ä–∏—á–∏–Ω–∞ - ${text}`;
    Void.sendMessage(citel.chat, { text: textt,  mentions: [citel.sender, users]}, { quoted: citel });
    await new warndb({ id: newStr, reason: text, date: currentTime, group: citel.chat, warnedby: citel.pushName }).save();
    if (checkqinfo.length > 1) {
        const groupMetadata = citel.isGroup ? await Void.groupMetadata(citel.chat)
               .catch((e) => {}) : "";
        const groupName = groupMetadata.subject;
        let textt = `–ü—Ä–∏–≤–µ—Ç, @${users.split("@")[0]}! –£ —Ç–µ–±—è —É–∂–µ —Ç—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è –≤ ${groupName}.\n–ò–∑–≤–∏–Ω–∏, –ø—Ä–∏–¥–µ—Ç—Å—è —É–¥–∞–ª–∏—Ç—å —Ç–µ–±—è!`;
        await Void.sendMessage(citel.chat, { text: textt,  mentions: [users]}, { quoted: citel });
        await Void.groupParticipantsUpdate(citel.chat, [users], "remove");
        await warndb.deleteMany({ id: newStr, group: citel.chat });
    }
});
//----------------------–í—ã–¥–∞—á–∞ –ø—Ä–∞–≤,—É–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
const prom = cmd({
    pattern: "prom",
    alias: ["–ø—Ä–æ–º"],
    desc: "Provides admin role to replied/quoted user",
    category: "group",
    filename: __filename,
    use: '<quote|reply|number>',
},
async(Void, citel, text) => {
    const userrr = await counter.findOne({ groupId: citel.chat, userId: citel.sender });
    if (!citel.isGroup) return citel.reply('–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö');
    const groupAdmins = await getAdmin(Void, citel)
    const botNumber = await Void.decodeJid(Void.user.id)
    const isBotAdmins = citel.isGroup ? groupAdmins.includes(botNumber) : false;
    if (!isBotAdmins) return citel.reply('–í—ã–¥–∞–π –∞–¥–º–∏–Ω–∫—É –±–æ—Ç—É —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É');
    try {
       let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
        if (!users) return;
        await Void.groupParticipantsUpdate(citel.chat, [users], "promote");
    } catch {
        //		citel.reply(tlang().botAdmin);

    }
}
)
//-------------------------------------------
const dem = cmd({
pattern: "dem",
alias: ["–¥–µ–º"],
desc: "Demotes replied/quoted user from group",
category: "group",
filename: __filename,
use: '<quote|reply|number>',
},
async(Void, citel, text) => {
if (!citel.isGroup) return citel.reply('–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö');
const groupAdmins = await getAdmin(Void, citel)
const botNumber = await Void.decodeJid(Void.user.id)
const isBotAdmins = citel.isGroup ? groupAdmins.includes(botNumber) : false;
if (!isBotAdmins) return citel.reply('–í—ã–¥–∞–π –∞–¥–º–∏–Ω–∫—É –±–æ—Ç—É —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É');
try {
   let users = citel.mentionedJid ? citel.mentionedJid[0] : citel.msg.contextInfo.participant || false;
   if (!users) return;
   await Void.groupParticipantsUpdate(citel.chat, [users], "demote");
} catch {
   //		citel.reply(tlang().botAdmin);

}
}
)
//------------------------------------------------------------------------
const hidetag = cmd({
    pattern: "hidetag",
    alias: ["htag"],
    desc: "Tags everyperson of group without mentioning their numbers",
    category: "group",
    filename: __filename,
    use: '<text>',
},
async(Void, citel, text) => {
    const userrr = await counter.findOne({ groupId: citel.chat, userId: citel.sender });
    if (userrr.wbc < 7) return citel.reply(`–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç WhaBotCoins, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ 7 WBC : —É –≤–∞—Å –∑–∞–≤–∞–ª—è–ª–æ—Å—å –≤ –∫–∞—Ä–º–∞–Ω–µ ${userrr.wbc} WBC `);
    const groupMetadata = citel.isGroup ? await Void.groupMetadata(citel.chat).catch((e) => {}) : "";
    const participants = citel.isGroup ? await groupMetadata.participants : "";
    Void.sendMessage(citel.chat, {
        text: text ? text : "",
        mentions: participants.map((a) => a.id),
    }, {
        quoted: citel,
    });
    await counter.updateOne({ userId: citel.sender }, { $inc: { wbc: -7 } });
})
//------------------------------tagadmin------------------------------------------
const tagadmins = cmd({
    pattern: "tagadmin",
    alias: ["tagadmin"],
    desc: "Tags everyperson of group without mentioning their numbers",
    category: "group",
    filename: __filename,
    use: '<text>',
},

async(Void, citel, text) => {
    const userrr = await counter.findOne({ groupId: citel.chat, userId: citel.sender });
    if (!text) return citel.reply(`–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤`)
    if (userrr.wbc < 7) return citel.reply(`–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç WhaBotCoins, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ 7 WBC : —É –≤–∞—Å –∑–∞–≤–∞–ª—è–ª–æ—Å—å –≤ –∫–∞—Ä–º–∞–Ω–µ ${userrr.wbc} WBC `);
    const groupMetadata = citel.isGroup ? await Void.groupMetadata(citel.chat).catch((e) => {}) : "";
    const participants = citel.isGroup ? await groupMetadata.participants : "";
    const groupAdmins = participants.filter(p => p.admin);
  const listAdmin = groupAdmins.map((v, i) => `*¬ª ${i + 1}. @${v.id.split('@')[0]}*`).join('\n')
  const owner = groupMetadata.owner || groupAdmins.find(p => p.admin === 'superadmin')?.id || citel.chat.split`-`[0] + '@s.whatsapp.net'
  let pesan = args.join` `
  let oi = `–ó–∞–ø—Ä–æ—Å: _${pesan}_`
  
  let textoA = 
  `*‚ä± ‚îÄ‚îÄ‚îÄ‚îÄ „Ää.‚ãÖ ‚ùï ‚ãÖ.„Äã ‚îÄ‚îÄ‚îÄ‚îÄ ‚ä∞*
  ‡∑Ü –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!
  ‡∑Ü ${oi}
  *‚ä± ‚îÄ‚îÄ‚îÄ‚îÄ „Ää.‚ãÖ ‚ùï ‚ãÖ.„Äã ‚îÄ‚îÄ‚îÄ‚îÄ ‚ä∞*`
  
  let textoB = 
  `${listAdmin}
  
  ‚õî –í–∞–∂–Ω–æ: –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É! ‚õî`.trim()
  await Void.sendMessage(citel.chat, textoA + textoB, m, false, { mentions: [...groupAdmins.map(v => v.id), owner] })
  await counter.updateOne({ userId: citel.sender }, { $inc: { wbc: -7 } });
  })
//---------------------------------------------------------------------------

const kicknoactiv = cmd({
    pattern: "kicknoactiv"
  }, async (Void,citel,text) => {
    const userrr = await counter.findOne({ groupId: citel.chat, userId: citel.sender });
    if (userrr.wbc < 7) return citel.reply(`–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç WhaBotCoins, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ 7 WBC : —É –≤–∞—Å –∑–∞–≤–∞–ª—è–ª–æ—Å—å –≤ –∫–∞—Ä–º–∞–Ω–µ ${userrr.wbc} WBC `);

    const groupMetadata = citel.isGroup ? await Void.groupMetadata(citel.chat).catch(() => {}) : '';
    const participants = citel.isGroup && groupMetadata.participants != undefined ? await groupMetadata.participants : '';
    const usersDk = await counter.find({groupId: citel.chat})
    const userIds = usersDk.map(user => user.userId);
    const filteredParticipants = participants.filter(participant => !userIds.includes(participant.id));
    for (const participant of filteredParticipants) {
        console.log(participant.id)
        await Void.groupParticipantsUpdate(citel.chat, [participant.id], "remove");
        await new Promise(resolve => setTimeout(resolve, 3000));
    }
    await counter.updateOne({ userId: citel.sender }, { $inc: { wbc: -7 } });
  })

module.exports = [kick, warn, dem, prom, hidetag, tagadmins, add, kicknoactiv];